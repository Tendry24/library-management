openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0
  description: STD22001
servers:
  - url: https://library.com
paths:
  /books:
    get:
      tags:
        - "Books"
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string

        - in: query
          name: startDate
          description: start of intervals
          required: false
          schema:
            type: string
            format: date
        
        - in: query
          name: endDate
          description: end of intervals
          required: false
          schema:
            type: string
            format: date

        #TODO3: add parameter to filter books by intervals of dates of the releaseDate
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      tags:
        - "Books"
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

  /authors:
    get:
      tags:
        - Authors
      summary: Get all authors
      description: The returned authors are ordered by name.
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: Filter return Author by given name
          required: false
          schema:
            type: string
      responses:
        200:
          description: The list of filtered author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'

    put: 
      tags:
        - "Authors"
      summary: Create or update a list of Authors
      operationId: CreateOrUpdateAuthor
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/author'
      responses:
        200:
          description: The list of created or updated Author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'

    delete:
        tags:
        - Authors
        summary: Delete one author
        operationId: deleteAuthorbyId
        parameters:
          - in: query
            name: AuthorId
            required: true
            schema:
              type: integer
            description: ID of the author to delete
        responses:
          '200':
            description: Author deleted successfully
  
      
        

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          type: string
          items:
           $ref: '#/components/schemas/author'
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    #TODO1
    author: 
      type: object
      properties:
        id: 
          type: string
          description: id unique
          format: uuid
        name:
          type: string
          description: author's name
        gender:
          type: string
          description: sex of the authors
          enum:
            - M
            - F